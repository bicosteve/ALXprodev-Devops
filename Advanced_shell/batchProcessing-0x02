#!/bin/bash

# Define the list of Pokémon
POKEMON_LIST=("Bulbasaur" "Ivysaur" "Venusaur" "Charmander" "Charmeleon")

# Base API URL
API_BASE="https://pokeapi.co/api/v2/pokemon"

# Output directory
OUTPUT_DIR="./pokemon_data"

# Ensure the folder exists
mkdir -p "$OUTPUT_DIR"

# Maximum number of retries per request
MAX_RETRIES=3

# Loop through each Pokémon
for POKEMON in "${POKEMON_LIST[@]}"; do
    # Convert to lowercase for filename
    FILENAME="$OUTPUT_DIR/${POKEMON,,}.json"  
    RETRIES=0

    echo "Fetching data for $POKEMON..."

    while [ $RETRIES -lt $MAX_RETRIES ]; do
        RESPONSE=$(curl -s -w "%{http_code}" -o "$FILENAME" "$API_BASE/${POKEMON,,}")
        HTTP_STATUS=${RESPONSE: -3}

        if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "Data saved to $FILENAME"
            break
        else
            echo "Attempt $((RETRIES+1)) failed (HTTP $HTTP_STATUS), retrying..."
            RETRIES=$((RETRIES+1))
            sleep 2  # Add delay before retrying
        fi
    done

    if [ $RETRIES -eq $MAX_RETRIES ]; then
        echo "❌ Failed to fetch $POKEMON after $MAX_RETRIES attempts. Logging error."
        echo "$POKEMON (HTTP $HTTP_STATUS)" >> errors.txt
    fi

    sleep 2  
    # Add a delay to prevent rate-limiting
done

echo "All Pokémon data retrieval completed!"
